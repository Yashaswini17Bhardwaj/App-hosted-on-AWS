name: CI/CD Pipeline

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Install dependencies
        run: npm install
      - name: Run unit and integration tests
        run: npm test

  build-push:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Debug step to check secrets
      - name: Debug Docker credentials
        run: |
          echo "DOCKER_USERNAME length: ${#DOCKER_USERNAME}"
          echo "DOCKER_USERNAME value: '$DOCKER_USERNAME'"
          echo "Full tag would be: ${DOCKER_USERNAME}/demo-app:latest"
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      # Fixed: Single-line tag format
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/demo-app:latest,${{ secrets.DOCKER_USERNAME }}/demo-app:${{ github.sha }}

  scan:
    needs: build-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Scan for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.DOCKER_USERNAME }}/demo-app:latest'
          format: 'table'
          exit-code: '1'

  deploy-staging:
    needs: scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
      - name: Decode kubeconfig
        run: echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > kubeconfig
      - name: Deploy to staging
        run: |
          export KUBECONFIG=kubeconfig
          kubectl create namespace staging --dry-run=client -o yaml | kubectl apply -f -
          sed 's/latest/${{ github.sha }}/g' kubernetes/deployment.yaml | kubectl apply -f - -n staging
          kubectl apply -f kubernetes/service.yaml -n staging

  manual-approval:
    needs: deploy-staging
    runs-on: ubuntu-latest
    steps:
      - name: Manual Approval
        uses: trstringer/manual-approval@v1
        with:
          approvers: Yashaswini17Bhardwaj
          minimum-approvals: 1
          issue-title: 'Approve Production Deployment'
          issue-body: 'Approve to deploy to production?'

  # Added missing production deployment step
  deploy-production:
    needs: manual-approval
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
      - name: Decode kubeconfig
        run: echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > kubeconfig
      - name: Deploy to production
        run: |
          export KUBECONFIG=kubeconfig
          kubectl create namespace production --dry-run=client -o yaml | kubectl apply -f -
          sed 's/latest/${{ github.sha }}/g' kubernetes/deployment.yaml | kubectl apply -f - -n production
          kubectl apply -f kubernetes/service.yaml -n production

  notify:
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Send failure email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com  
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: GitHub Action Failed
          to: ${{ secrets.EMAIL_RECIPIENTS }}
          from: GitHub Actions
          body: Workflow ${{ github.workflow }} failed in ${{ github.repository }}.
